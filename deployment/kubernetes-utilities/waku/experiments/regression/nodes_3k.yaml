apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nodes-0
  namespace: zerotesting
spec:
  replicas: 3000
  podManagementPolicy: "Parallel"
  serviceName: zerotesting-service
  selector:
    matchLabels:
      app: zerotenkay
  template:
    metadata:
      labels:
        app: zerotenkay
    spec:
      dnsConfig:
        searches:
          - zerotesting-service.zerotesting.svc.cluster.local
      volumes:
        - name: enr-data
          emptyDir: {}
      initContainers:
        - name: grabenr
          image: soutullostatus/getenr:v0.5.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: enr-data
              mountPath: /etc/enr
          command:
            - /app/getenr.sh
          args:
            - "3"
            - "zerotesting-bootstrap.zerotesting"
      containers:
        - name: waku
          image: soutullostatus/nwaku-jq-curl:v0.34.0-rc1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8645
            - containerPort: 8008
          volumeMounts:
            - name: enr-data
              mountPath: /etc/enr
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  curl_output=$(curl -s http://127.0.0.1:8008/metrics);
                  curl_status=$?;
                  if [ $curl_status -ne 0 ]; then
                    echo "Curl failed with status $curl_status";
                    exit 1;  # failure, unhealthy state
                  fi;
                  echo "$curl_output" | awk '
                    !/^#/ && /^libp2p_gossipsub_healthy_peers_topics / {
                      print "Found gossipsub:", $0;
                      if ($2 == 1.0) {
                        exit 0;  # success, healthy state
                      } else {
                        exit 1;  # failure, unhealthy state
                      }
                    }
                    END { if (NR == 0) exit 1 }  # If no matching line is found, exit with failure
                  '
            successThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 1
            failureThreshold: 2
            timeoutSeconds: 5
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "600Mi"
              cpu: "400m"
          env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command:
            - sh
            - -c
            - |
              . /etc/enr/enr.env
              echo ENRs are $ENR1 $ENR2 $ENR3
              nice -n 19 /usr/bin/wakunode \
              --relay=true \
              --max-connections=150 \
              --rest=true \
              --rest-admin=true \
              --rest-address=0.0.0.0 \
              --discv5-discovery=true \
              --discv5-enr-auto-update=True \
              --log-level=INFO \
              --metrics-server=True \
              --metrics-server-address=0.0.0.0 \
              --discv5-bootstrap-node=$ENR1 \
              --discv5-bootstrap-node=$ENR2 \
              --discv5-bootstrap-node=$ENR3 \
              --nat=extip:${IP} \
              --cluster-id=2 \
              --shard=0